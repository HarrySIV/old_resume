{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","value","selected","onChange","event","onChangeFilter","target","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","title","amount","ExpensesList","items","length","map","expense","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","filter","toString","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","random","onAddExpense","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.90fec155.chunk.js","sourcesContent":["import './Card.css';\r\n\r\nfunction Card(props) {\r\n   const classes = 'card ' + props.className\r\n   return <div className={classes}>{props.children}</div>\r\n}\r\n\r\nexport default Card;","import './ExpensesFilter.css';\r\n\r\nconst ExpensesFilter = props => {\r\n  const dropdownChangeHandler = event => props.onChangeFilter(event.target.value);\r\n\r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={dropdownChangeHandler}>\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;","import './ExpenseDate.css';\r\n\r\nconst ExpenseDate = props => {\r\n   const month = props.date.toLocaleString('en-US', {month: 'long'});\r\n   const day = props.date.toLocaleString('en-US', {day: '2-digit'});\r\n   const year = props.date.getFullYear();\r\n   return (\r\n      <div className=\"expense-date\">\r\n         <div className=\"expense-date__month\">{month}</div>\r\n         <div className=\"expense-date__day\">{day}</div>\r\n         <div className=\"expense-date__year\">{year}</div>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default ExpenseDate;","import Card from '../UI/Card';\r\nimport ExpenseDate from './ExpenseDate';\r\nimport './ExpenseItem.css'\r\n\r\nconst ExpenseItem = props => {\r\n\r\n   return (\r\n   <li>\r\n      <Card className=\"expense-item\">\r\n         <ExpenseDate date={props.date} />\r\n         <div className=\"expense-item__description\">\r\n            <h2>{props.title}</h2>\r\n            <div className=\"expense-item__price\">${props.amount}</div>\r\n         </div>\r\n      </Card>\r\n   </li>\r\n   );\r\n}\r\n\r\nexport default ExpenseItem;","import './ExpensesList.css';\r\nimport ExpenseItem from './ExpenseItem';\r\n\r\nconst ExpensesList = props => {\r\n   if (props.items.length === 0) {\r\n      return <h2 className=\"expenses-list__fallback\">No Expenses Found</h2>\r\n    }\r\n\r\n    return <ul className=\"expenses-list\">\r\n       {props.items.map(expense => (\r\n        <ExpenseItem \r\n          key={expense.id}\r\n          title={expense.title} \r\n          amount={expense.amount} \r\n          date={expense.date} />\r\n      ))}\r\n   </ul>\r\n};\r\n\r\nexport default ExpensesList;","import './ChartBar.css';\r\n\r\nconst ChartBar = props => {\r\n   let barFillHeight = '0%';\r\n   if (props.maxValue > 0) barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\r\n   return <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n         <div className=\"chart-bar__fill\" style={{height: barFillHeight}}></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n   </div>\r\n}\r\n\r\nexport default ChartBar;","import './Chart.css';\r\nimport ChartBar from './ChartBar';\r\nconst Chart = props => {\r\n   const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\r\n   const totalMaximum = Math.max(...dataPointValues);\r\n\r\n   return (\r\n      <div className=\"chart\">\r\n         {props.dataPoints.map(dataPoint => \r\n            <ChartBar \r\n               key={dataPoint.label} \r\n               value={dataPoint.value} \r\n               maxValue={totalMaximum} \r\n               label={dataPoint.label} />\r\n         )}\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default Chart;","import Chart from \"../Chart/Chart\";\r\n\r\nconst ExpensesChart = props => {\r\n   const chartDataPoints = [\r\n      {label: 'Jan', value: 0},\r\n      {label: 'Feb', value: 0},\r\n      {label: 'Mar', value: 0},\r\n      {label: 'Apr', value: 0},\r\n      {label: 'May', value: 0},\r\n      {label: 'Jun', value: 0},\r\n      {label: 'Jul', value: 0},\r\n      {label: 'Aug', value: 0},\r\n      {label: 'Sep', value: 0},\r\n      {label: 'Oct', value: 0},\r\n      {label: 'Nov', value: 0},\r\n      {label: 'Dec', value: 0}\r\n   ];\r\n\r\n   for (const expense of props.expenses) {\r\n      const expenseMonth = expense.date.getMonth();\r\n      chartDataPoints[expenseMonth].value += expense.amount;\r\n   }\r\n\r\n   return <Chart dataPoints={chartDataPoints} />;\r\n};\r\n\r\nexport default ExpensesChart;","import React, { useState } from 'react';\r\nimport './Expenses.css';\r\nimport Card from '../UI/Card';\r\nimport ExpensesFilter from './ExpensesFilter';\r\nimport ExpensesList from './ExpensesList';\r\nimport ExpensesChart from './ExpensesChart';\r\n\r\nconst Expenses = props => {\r\n  const [filteredYear, setFilteredYear] = useState('2020');\r\n  const filterChangeHandler = selectedYear => setFilteredYear(selectedYear);\r\n  const filteredExpenses = props.items.filter(expense => { return expense.date.getFullYear().toString() === filteredYear });\r\n  \r\n  return (\r\n    <Card className=\"expenses\">\r\n      <ExpensesFilter selected={filteredYear} onChangeFilter={filterChangeHandler} />\r\n      <ExpensesChart expenses={filteredExpenses} />\r\n      <ExpensesList items={filteredExpenses}/>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Expenses;","import React, { useState } from 'react';\r\nimport './ExpenseForm.css';\r\n\r\nconst ExpenseForm = props => {\r\n   const [enteredTitle, setEnteredTitle] = useState('');\r\n   const [enteredAmount, setEnteredAmount] = useState('');\r\n   const [enteredDate, setEnteredDate] = useState('');\r\n   \r\n   const titleChangeHandler = event => setEnteredTitle(event.target.value);\r\n   const amountChangeHandler = event => setEnteredAmount(event.target.value);\r\n   const dateChangeHandler = event => setEnteredDate(event.target.value);\r\n\r\n   const submitHandler = event => {\r\n      event.preventDefault();\r\n      const expenseData = {\r\n         title: enteredTitle,\r\n         amount: +enteredAmount,\r\n         date: new Date(enteredDate)\r\n      };\r\n      props.onSaveExpenseData(expenseData);\r\n      setEnteredAmount('');\r\n      setEnteredDate('');\r\n      setEnteredTitle('');\r\n   };\r\n\r\n   return (  \r\n      <form onSubmit={submitHandler}>\r\n         <div className=\"new-expense__controls\">\r\n            <div className=\"new-expense__control\">\r\n               <label>Title</label>\r\n               <input type=\"text\" value={enteredTitle} onChange={titleChangeHandler} />\r\n            </div>\r\n            <div className=\"new-expense__control\">\r\n               <label>Amount</label>\r\n               <input type=\"number\" min=\"0.01\" step=\"0.01\" value={enteredAmount} onChange={amountChangeHandler} />\r\n            </div>\r\n            <div className=\"new-expense__control\">\r\n               <label>Date</label>\r\n               <input type=\"date\" min=\"2021-01-01\" max=\"2022-12-31\" value={enteredDate} onChange={dateChangeHandler} />\r\n            </div>\r\n         </div>\r\n         <div className=\"new-expense__actions\">\r\n            <button type=\"button\" onClick={props.onCancel}>Cancel</button>\r\n            <button type=\"submit\">Add Expense</button>\r\n         </div>\r\n      </form>\r\n   );\r\n\r\n}\r\n\r\nexport default ExpenseForm;","import React, { useState } from \"react\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport './NewExpense.css';\r\n\r\nconst NewExpense = props => {\r\n   const [isEditing, setIsEditing] = useState(false);\r\n   const saveExpenseDataHandler = enteredExpenseData => {\r\n      const expenseData ={\r\n         ...enteredExpenseData,\r\n         id: Math.random().toString()\r\n      };\r\n      props.onAddExpense(expenseData);\r\n      setIsEditing(false);\r\n   }\r\n   const startEditingHandler = () => setIsEditing(true);\r\n   const stopEditingHandler = () => setIsEditing(false);\r\n\r\n   return (   \r\n      <div className=\"new-expense\">\r\n         {!isEditing && <button onClick={startEditingHandler}>Add New Expense</button>}\r\n         {isEditing && <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} onCancel={stopEditingHandler} />}\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default NewExpense;","import React, { useState } from 'react';\r\nimport Expenses from \"./components/Expenses/Expenses\";\r\nimport NewExpense from \"./components/NewExpense/NewExpense\";\r\n\r\nconst DUMMY_EXPENSES = [\r\n  { id: 'e1', title: 'Toilet Paper', amount: 94.12, date: new Date(2020, 7, 14)},\r\n  { id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2021, 2, 12)},\r\n  { id: 'e3', title: 'Car Insurance', amount: 294.67, date: new Date(2021, 2, 28)},\r\n  { id: 'e4', title: 'New Desk (Wooden)', amount: 450, date: new Date(2021, 5, 12)},\r\n];\r\n\r\nconst App = () => {\r\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\r\n  const addExpenseHandler = expense => {\r\n    setExpenses(prevExpenses => { \r\n      return [expense, ...prevExpenses];\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <NewExpense onAddExpense={addExpenseHandler} />\r\n      <Expenses items={expenses}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import ReactDOM from 'react-dom';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}